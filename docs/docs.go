// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ingest/run": {
            "post": {
                "description": "Ejecuta un proceso ETL que extrae datos de ADS y CRM y guarda los resultados. Soporta filtrado por fecha con el parámetro 'since'.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingest"
                ],
                "summary": "Ejecuta el proceso ETL de ingestión",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fecha desde la cual filtrar datos (YYYY-MM-DD)",
                        "name": "since",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ETL completado correctamente",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Parámetro de fecha inválido",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Retorna un listado de métricas con información de campañas, clics, costo, leads y ventas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Obtiene métricas almacenadas",
                "responses": {
                    "200": {
                        "description": "Lista de métricas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MetricResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.MetricResponse": {
            "type": "object",
            "properties": {
                "clicks": {
                    "type": "integer"
                },
                "closed_won": {
                    "type": "integer"
                },
                "cost": {
                    "type": "number"
                },
                "leads": {
                    "type": "integer"
                },
                "opportunities": {
                    "type": "integer"
                },
                "revenue": {
                    "type": "number"
                },
                "utm_campaign": {
                    "type": "string"
                },
                "utm_medium": {
                    "type": "string"
                },
                "utm_source": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
